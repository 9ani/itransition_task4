<!DOCTYPE html>
<html lang="en">
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <title>Admin Profile</title>
</head>
<body class="bg-light">
    <div class="container"> 
        <% if (!user || !user._id) { %>
            <div class="alert alert-warning"> 
                <h2>Please log in or register to view this page.</h2>
                <p>
                    <a class="btn btn-primary" href="/login">Log In</a> 
                    or
                    <a class="btn btn-secondary" href="/register">Register</a> 
                </p>
            </div>
        <% } else { %>

            <div class="d-flex justify-content-between align-items-center mb-4"> 
                <h2>Welcome, <%= user.full_name %> </h2>
                <a class="btn btn-outline-secondary" href="/api/signout">Logout</a> 
            </div>

            <h3 class="mb-4">All Users</h3>

            <div class="mb-3 d-flex"> 
                <button class="btn btn-danger me-2" onclick="deleteSelectedUsers()"><i class="fa-solid fa-trash"></i> Delete</button>
                <button class="btn btn-warning me-2" onclick="blockSelectedUsers()"><i class="fa-solid fa-lock"></i> Block</button>
                <button class="btn btn-success" onclick="unblockSelectedUsers()"><i class="fa-solid fa-lock-open"></i> Unblock</button>
            </div>

            <table class="table table-striped table-hover"> 
                <thead class="table-dark"> 
                    <tr>
                        <th>
                            <input type="checkbox" id="selectAll" onchange="toggleSelectAll()"> 
                        </th>
                        <th>Full Name</th>
                        <th>Email</th>
                        <th>Last Login</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    <% users.forEach(user => { %>
                    <tr>
                        <td>
                            <input type="checkbox" class="user-checkbox" value="<%= user._id %>">
                        </td>
                        <td>
                            <input type="text" id="editUsername_<%= user._id %>" class="form-control" value="<%= user.full_name %>" required> 
                        </td>
                        <td>
                            <%= user.email %>
                        </td>
                        <td>
                            <%= user.lastLogin ? user.lastLogin.toLocaleString() : 'Never' %> 
                        </td>
                        <td>
                            <%= user.status === 'active' ? 'Active' : 'Blocked' %> 
                        </td>
                    </tr>
                    <% }) %>
                </tbody>
            </table>
        <% } %>
    </div> 

    <script>
    function getSelectedUserIds() {
        const selected = [];
        document.querySelectorAll('.user-checkbox:checked').forEach(cb => {
            selected.push(cb.value);
        });
        return selected;
    }

    function toggleSelectAll() {
        const selectAllCheckbox = document.getElementById('selectAll');
        const isChecked = selectAllCheckbox.checked;
        document.querySelectorAll('.user-checkbox').forEach(cb => {
            cb.checked = isChecked;
        });
    }

    async function deleteSelectedUsers() {
        const userIds = getSelectedUserIds(); 
        if (userIds.length === 0) {
            alert("Please select at least one user to delete.");
            return;
        }

        if (confirm('Are you sure you want to delete the selected users?')) {
            try {
                const response = await fetch('/admin/delete', {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ userIds }),
                });

                if (response.ok) {
                    location.reload(); 
                } else {
                    console.error('Failed to delete users');
                }
            } catch (error) {
                console.error('Error deleting users:', error);
            }
        }
    }

    async function blockSelectedUsers() {
        const userIds = getSelectedUserIds();
        if (userIds.length === 0) {
            alert("Please select at least one user to block.");
            return;
        }

        if (confirm('Are you sure you want to block the selected users?')) {
            try {
                const response = await fetch('/admin/block', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ userIds }), 
                });

                if (response.ok) {
                    location.reload();
                } else {
                    console.error('Failed to block users');
                }
            } catch (error) {
                console.error('Error blocking users:', error);
            }
        }
    }

    async function unblockSelectedUsers() {
        const userIds = getSelectedUserIds(); 
        if (userIds.length === 0) {
            alert("Please select at least one user to unblock.");
            return;
        }

        if (confirm('Are you sure you want to unblock the selected users?')) {
            try {
                const response = await fetch('/admin/unblock', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ userIds }),
                });

                if (response.ok) {
                    location.reload(); 
                } else {
                    console.error('Failed to unblock users');
                }
            } catch (error) {
                console.error('Error unblocking users:', error);
            }
        }
    }

    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-muNm/B4SA+GTSNc/8KoZWbg/3UHsAJ/p8PWra5rDgMGzMxRRyKp69qZBjsb92a+A" crossorigin="anonymous"></script>
    <script src="https://kit.fontawesome.com/a02d3ac22f.js" crossorigin="anonymous"></script>
</body>
</html>
